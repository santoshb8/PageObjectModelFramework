trigger:
  - azuredevops  # Change to your default branch name if needed

pool:
  vmImage: 'ubuntu-latest'

steps:
  # Step 1: Create screenshots/ folder if not exists
  - script: |
      mkdir -p screenshot
    displayName: 'Create screenshots folder'

  # Step 2: List the contents of src/test/resources folder
  - script: |
      echo "Listing contents of src/test/resources folder"
      ls -l /home/vsts/work/1/s/src/test/resources/
    displayName: 'List contents of src/test/resources folder'

  # Step 3: Run Maven Tests
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean test'
      options: '-Dsurefire.suiteXmlFiles=src/test/resources/Testrunners/testng_regression.xml'

  # Step 4: Publish Allure Raw Results (Optional - good for debugging)
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'allure-results'
      artifact: 'allure-results'
      publishLocation: 'pipeline'

  # Step 5: Install Allure CLI
  - script: |
      sudo apt-get update
      sudo apt-get install -y allure
    displayName: 'Install Allure CLI'

  # Step 6: Generate Allure Final Report
  - script: |
      allure generate allure-results --clean -o allure-report
    displayName: 'Generate Allure Report'

  # Step 7: Publish Allure Final Report
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'allure-report'
      artifact: 'allure-report'
      publishLocation: 'pipeline'

  # Step 8: Publish Extent Reports Folder
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'reports'
      artifact: 'extent-reports'
      publishLocation: 'pipeline'

  # Step 9: Publish Screenshots Folder (optional if you want screenshots separately too)
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'screenshots'
      artifact: 'screenshots'
      publishLocation: 'pipeline'
