trigger:
  branches:
    include:
      - azuredevops  # Adjust if your main branch is different

pool:
  vmImage: 'ubuntu-latest'

steps:
  # Step 1: Create screenshots/ folder in the working directory Java sees
  - script: |
      echo "Creating screenshots directory in Java's working directory"
      mkdir -p $(System.DefaultWorkingDirectory)/screenshots
    displayName: 'Ensure screenshots folder exists for Java'

  # Step 2: List contents for verification
  - script: |
      echo "Listing contents of src/test/resources/TestRunners/"
      ls -l src/test/resources/TestRunners/
    displayName: 'Verify TestRunners directory contents'

  # Step 3: Run Maven Tests
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean test'
      options: '-Dsurefire.suiteXmlFiles=src/test/resources/TestRunners/testng_regression.xml'
    displayName: 'Run Maven TestNG Suite'

  # Step 4: Publish Allure Raw Results
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'allure-results'
      artifact: 'allure-results'
      publishLocation: 'pipeline'
    displayName: 'Publish Allure Raw Results'

    # Step 5: Install Allure CLI (manually from GitHub)
  - script: |
      wget https://github.com/allure-framework/allure2/releases/latest/download/allure-2.27.0.tgz
      tar -zxvf allure-2.27.0.tgz
      sudo mv allure-2.27.0 /opt/allure
      sudo ln -s /opt/allure/bin/allure /usr/bin/allure
      allure --version
    displayName: 'Install Allure CLI'


  # Step 6: Generate Allure Final Report
  - script: |
      allure generate allure-results --clean -o allure-report
    displayName: 'Generate Allure Report'

  # Step 7: Publish Allure Final Report
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'allure-report'
      artifact: 'allure-report'
      publishLocation: 'pipeline'
    displayName: 'Publish Allure Report'

  # Step 8: Publish Extent Reports Folder
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'reports'
      artifact: 'extent-reports'
      publishLocation: 'pipeline'
    displayName: 'Publish Extent Reports'

  # Step 9: Publish Screenshots Folder (ensure folder exists from Java test runs)
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'screenshots'
      artifact: 'screenshots'
      publishLocation: 'pipeline'
    displayName: 'Publish Screenshots'
